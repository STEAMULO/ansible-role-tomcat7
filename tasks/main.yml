---

# Users work
  - name: add group "{{ tomcatUser }}"
    group: name="{{ tomcatUser }}"

  - name: Create user "{{ tomcatUser }}" and add to "{{ tomcatUser }}" group
    user: name="{{ tomcatUser }}" group="{{ tomcatUser }}"
    become: True

# Download Tomcat package

  - name: Ensure unzip is installed
    apt: pkg=unzip state=present

  - name: Ensure dir "/opt/{{ tomcatServiceName }}" exists
    file: path="/opt/{{ tomcatServiceName }}" state=directory owner="{{ tomcatUser }}" group="{{ tomcatUser }}" recurse=yes

  - name: Download Tomcat from "{{ tomcatZip }}" and unzip archive to "/opt/{{ tomcatServiceName }}"
    unarchive: src="{{ tomcatZip }}" dest="/opt/{{ tomcatServiceName }}" remote_src=yes creates="/opt/{{ tomcatServiceName }}/conf/server.xml"

# Install Tomcat package

  - name: Symlink install directory /opt/{{ tomcatServiceName }} to {{ tomcatCatalinaBase }}
    file: src="/opt/{{ tomcatServiceName }}" path="{{ tomcatCatalinaBase }}" state=link

  - name: Change ownership and rights of Tomcat installation in {{ tomcatCatalinaBase }}
    file: path="{{ tomcatCatalinaBase }}{{ item.path }}" owner="{{ tomcatUser }}" group="{{ tomcatUser }}" state=directory mode="{{ item.mode }}" recurse=yes
    with_items:
      - { path: '/', mode: 750 }
      - { path: '/logs', mode: 755 }
    become: True

# Configure Tomcat server and service

  - name: Configure Tomcat server
    template: src=server.xml dest="{{ tomcatCatalinaBase }}/conf/"
    notify: restart tomcat

  - name: Configure Tomcat users
    template: src=tomcat-users.xml dest="{{ tomcatCatalinaBase }}/conf/"
    notify: restart tomcat

  - name: Install Tomcat init script
    template: src=tomcat-initscript.sh dest="/etc/init.d/{{ tomcatServiceName }}" mode=0755
    when: ansible_distribution_release == "trusty"

  - name: Install Tomcat systemd script
    template: src=tomcat.service dest="/etc/systemd/system/{{ tomcatServiceName }}.service" mode=0755
    when: ansible_distribution_release == "xenial"

  - name: Delete Tomcat ROOT webapp folder
    file: path="{{ tomcatCatalinaBase }}/webapps/ROOT" state=absent

  - name: Link application to Tomcat webapps
    file: src="{{ tomcatApplicationRoot }}" dest="{{ tomcatCatalinaBase }}/webapps/ROOT" state=link force=yes
    when: tomcatApplicationRoot is defined

  - name: Set tomcat service according to {{ tomcatUseService }}
    service: name=tomcat enabled="{{ tomcatUseService | ternary('yes','no')}}" daemon-reload=yes